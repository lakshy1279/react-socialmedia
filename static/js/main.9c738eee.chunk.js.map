{"version":3,"sources":["helpers/urls.js","helpers/utilis.js","actions/posts.js","actions/actionTypes.js","components/PostList.js","actions/auth.js","actions/search.js","components/Navbar.js","components/home.js","components/Page404.js","components/Login.js","components/Signup.js","components/Settings.js","actions/profile.js","actions/friend.js","components/User.js","components/FriendListItem.js","components/FriendList.js","components/CreatePost.js","components/Post.js","components/Comment.js","components/Chat.js","components/App.js","reducers/auth.js","reducers/profile.js","reducers/friend.js","reducers/search.js","reducers/index.js","reducers/posts.js","index.js","store/index.js"],"names":["API_ROOT1","APIUrls","page","limit","userId","curr_user","id","likeType","searchText","require","func","getFormBody","params","formBody","property","console","log","encodeKey","encodeURIComponent","encodeValue","push","join","getAuthTokenFromLocalStorage","localStorage","getItem","fetchPosts","dispatch","url","fetch","then","response","json","data","posts","type","createComment","content","postId","user","method","headers","Authorization","body","post_id","success","comment","addComment","addLikeToStore","addLike","PostList","this","props","className","map","post","key","_id","React","Component","signup","email","password","name","confirmPassword","confirm_password","setItem","token","error","message","searchUsers","searchResultSuccess","users","Navbar","logout","removeItem","handleSearch","e","target","value","auth","isLoggedin","results","to","src","alt","placeholder","onChange","length","onClick","connect","state","search","Home","friends","Page404","Login","handleEmailChange","setState","handlePasswordChange","handleFormSubmit","preventDefault","login","inProgress","location","from","pathname","required","disabled","Signup","handleInputChange","field","Settings","handleChange","fieldName","val","handleSave","editUser","editMode","fetchUserProfile","removeFriend","User","checkIfUserIsAFriend","match","friend","to_user","indexOf","handleAddFriendClick","a","options","successMessage","friendship","handleRemoveFriendClick","prevProps","prevParams","currParams","profile","isUserAFriend","FriendListItem","FriendList","CreatePost","handleOnClick","Post","handleKeyPress","handlePostLike","isPostLikeByUser","likes","includes","comments","onKeyPress","Comment","Chat","setupConnections","socketConnection","socket","self","on","emit","user_email","userEmail","chatroom","messages","messageObject","typedMessage","handleSubmit","io","height","PrivateRoute","privateRouteProps","path","component","render","App","jwtDecode","authenticateUser","exact","initialAuthState","initalProfileState","initialFriendState","initialSearchState","combineReducers","action","newPost","updatedPost","concat","newArr","filter","store","createStore","reducer","applyMiddleware","thunk","logger","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c738eee.chunk.js","sourcesContent":["const API_ROOT = 'http://codeial.com:8000/api/v2';\r\nconst API_ROOT1 = 'http://localhost:7000/api/v1';\r\nexport const APIUrls = {\r\n  login: () => `${API_ROOT1}/user/create-session`,\r\n  editProfile: () => `${API_ROOT1}/user/edit`,\r\n  signup: () => `${API_ROOT1}/user/signup`,\r\n  fetchPosts: (page = 1, limit = 5) =>\r\n    `${API_ROOT1}/posts?page=${page}&limit=${limit}`,\r\n  userProfile: (userId) => `${API_ROOT1}/user/fetch/${userId}`,\r\n  userFriends: () => `${API_ROOT1}/friendship/fetch_user_friends`,\r\n  addFriend: (userId, curr_user) =>\r\n    `${API_ROOT1}/friendship/create_friendship?user_id=${userId}&curr_user=${curr_user}`,\r\n  removeFriend: (userId) =>\r\n    `${API_ROOT1}/friendship/remove_friendship?user_id=${userId}`,\r\n  createPost: () => `${API_ROOT1}/posts/create`,\r\n  createComment: () => `${API_ROOT1}/comments`,\r\n  toggleLike: (id, likeType) =>\r\n    `${API_ROOT1}/likes/toggle?id=${id}&type=${likeType}`,\r\n  userSearch: (searchText) => `${API_ROOT1}/user/search?text=${searchText}`,\r\n};\r\n","const { func } = require('prop-types');\r\n\r\nexport function getFormBody(params) {\r\n  let formBody = [];\r\n  console.log(params);\r\n  for (let property in params) {\r\n    console.log(property);\r\n    let encodeKey = encodeURIComponent(property); //user name=>user%20name\r\n    console.log(params[property]);\r\n    let encodeValue = encodeURIComponent(params[property]); //akash 123=>aaksh%2020123\r\n    formBody.push(encodeKey + '=' + encodeValue);\r\n  }\r\n  return formBody.join('&'); //username=akash&&password=123123\r\n}\r\n\r\nexport function getAuthTokenFromLocalStorage() {\r\n  return localStorage.getItem('token');\r\n}\r\n","import {\r\n  UPDATE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  UPDATE_POST_LIKE,\r\n} from './actionTypes';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage, getFormBody } from '../helpers/utilis';\r\nimport { func } from 'prop-types';\r\nexport function fetchPosts() {\r\n  return (dispatch) => {\r\n    const url = APIUrls.fetchPosts();\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data.data.posts);\r\n        dispatch(updatePosts(data.data.posts));\r\n      });\r\n  };\r\n}\r\nexport function updatePosts(posts) {\r\n  return {\r\n    type: UPDATE_POSTS,\r\n    posts,\r\n  };\r\n}\r\nexport function addPost(post) {\r\n  return {\r\n    type: ADD_POST,\r\n    post,\r\n  };\r\n}\r\nexport function createPost(content, user) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createPost();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({ content, user }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Post_Data', data);\r\n        if (data.success) {\r\n          dispatch(addPost(data.data.post));\r\n        }\r\n      });\r\n  };\r\n}\r\nexport function createComment(content, postId, user) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createComment();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({ content, post_id: postId, user }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Comment_Data', data);\r\n        if (data.success) {\r\n          dispatch(addComment(data.data.comment, postId));\r\n        }\r\n      });\r\n  };\r\n}\r\nexport function addComment(comment, postId) {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    comment,\r\n    postId,\r\n  };\r\n}\r\nexport function addLikeToStore(id, likeType, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.toggleLike(id, likeType);\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Like_Data', data.data.user);\r\n        if (!data.success) {\r\n          dispatch(addLike(id, data.data.user));\r\n        }\r\n      });\r\n  };\r\n}\r\nexport function addLike(postId, userId) {\r\n  return {\r\n    type: UPDATE_POST_LIKE,\r\n    userId,\r\n    postId,\r\n  };\r\n}\r\n","export const UPDATE_POSTS = 'UPDATE_POSTS';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const UPDATE_POST_LIKE = 'ADD_LIKE';\r\n//login action types\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\r\nexport const LOG_OUT = 'LOG_OUT';\r\n//signup\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\nexport const CLEAR_AUTH_STATE = 'CLEAR_AUTH_STATE';\r\n//user_profile\r\nexport const EDIT_USER_SUCCESSFUL = 'EDIT_USER_SUCCESSFUL';\r\nexport const EDIT_USER_FAILED = 'EDIT_USER_FAILED';\r\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS';\r\nexport const USER_PROFILE_FAILURE = 'USER_PROFILE_FAILURE';\r\nexport const FETCH_USER_PROFILE = 'FETCH_USER_PROFILE';\r\n//friend\r\nexport const FETCH_USER_FRIENDS = 'FETCH_USER_FRIENDS';\r\nexport const ADD_FRIEND = 'ADD_FRIEND';\r\nexport const REMOVE_FRIEND = 'REMOVE_FRIEND';\r\n//searxh\r\nexport const FETCH_SEARCH_RESULTS_SUCCESS = 'FETCH_SEARCH_RESULTS_SUCCESS';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CreatePost, Post } from './';\r\nimport PropTypes from 'prop-types';\r\nclass PostList extends React.Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n    return (\r\n      <div className=\"posts-list\">\r\n        <CreatePost />\r\n        {posts.map((post) => (\r\n          <Post post={post} key={post._id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import {\r\n  LOGIN_START,\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED,\r\n  SIGNUP_START,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_FAILED,\r\n  EDIT_USER_SUCCESSFUL,\r\n} from './actionTypes';\r\nimport { func } from 'prop-types';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getFormBody, getAuthTokenFromLocalStorage } from '../helpers/utilis';\r\nexport function startLogin() {\r\n  return {\r\n    type: LOGIN_START,\r\n  };\r\n}\r\nexport function loginFailed(errorMessage) {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    error: errorMessage,\r\n  };\r\n}\r\nexport function loginSuccess(user) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n  };\r\n}\r\nexport function login(email, password) {\r\n  return (dispatch) => {\r\n    dispatch(startLogin());\r\n    const url = APIUrls.login();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: getFormBody({ email, password }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('data', data);\r\n        if (data.success) {\r\n          //dispatch action to save user\r\n          localStorage.setItem('token', data.data.token);\r\n          dispatch(loginSuccess(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(loginFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\n//signup\r\nexport function signup(email, password, name, confirmPassword) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.signup();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: getFormBody({\r\n        email,\r\n        password,\r\n        name,\r\n        confirm_password: confirmPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('data', data);\r\n        if (data.success) {\r\n          //dispatch action to create user\r\n          localStorage.setItem('token', data.data.token);\r\n          dispatch(signupSuccessful(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(signupFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function startSignup() {\r\n  return {\r\n    type: SIGNUP_START,\r\n  };\r\n}\r\nexport function signupFailed(error) {\r\n  return {\r\n    type: SIGNUP_FAILED,\r\n    error,\r\n  };\r\n}\r\nexport function signupSuccessful(user) {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    user,\r\n  };\r\n}\r\nexport function authenticateUser(user) {\r\n  return {\r\n    type: AUTHENTICATE_USER,\r\n    user,\r\n  };\r\n}\r\nexport function logoutUser() {\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n}\r\nexport function clearAuthState() {\r\n  return {\r\n    type: CLEAR_AUTH_STATE,\r\n  };\r\n}\r\nexport function editUserSuccessful(user) {\r\n  return {\r\n    type: EDIT_USER_SUCCESSFUL,\r\n    user,\r\n  };\r\n}\r\nexport function editUserFailed(error) {\r\n  return {\r\n    type: EDIT_USER_FAILED,\r\n    error,\r\n  };\r\n}\r\nexport function editUser(name, password, confirmPassword, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.editProfile();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({\r\n        name,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        id: userId,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Edit_Profile_Data', data);\r\n        if (data.success) {\r\n          //dispatch action to create user\r\n          if (data.data.token) {\r\n            localStorage.setItem('token', data.data.token);\r\n          }\r\n          dispatch(editUserSuccessful(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(editUserFailed(data.message));\r\n      });\r\n  };\r\n}\r\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from './actionTypes';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utilis';\r\nimport { APIUrls } from '../helpers/urls';\r\nexport function searchUsers(searchText) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userSearch(searchText);\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Search data', data);\r\n        if (data.success) {\r\n          dispatch(searchResultSuccess(data.data.users));\r\n        } else {\r\n          dispatch(searchResultSuccess([]));\r\n        }\r\n      });\r\n  };\r\n}\r\nexport function searchResultSuccess(users) {\r\n  return {\r\n    type: FETCH_SEARCH_RESULTS_SUCCESS,\r\n    users,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logoutUser } from '../actions/auth';\r\nimport { searchUsers } from '../actions/search';\r\n\r\nclass Navbar extends React.Component {\r\n  logout = () => {\r\n    localStorage.removeItem('token');\r\n    this.props.dispatch(logoutUser());\r\n  };\r\n  handleSearch = (e) => {\r\n    const searchText = e.target.value;\r\n    this.props.dispatch(searchUsers(searchText));\r\n  };\r\n  render() {\r\n    const { isLoggedin, user } = this.props.auth;\r\n    const { results } = this.props;\r\n    return (\r\n      <div>\r\n        <nav className=\"nav\">\r\n          <div className=\"left-div\">\r\n            <Link to=\"/\">\r\n              <img\r\n                src=\"https://ninjasfiles.s3.amazonaws.com/0000000000003454.png\"\r\n                alt=\"logo\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div className=\"search-container\">\r\n            <img\r\n              className=\"search-icon\"\r\n              src=\"https://image.flaticon.com/icons/svg/483/483356.svg\"\r\n              alt=\"search-icon\"\r\n            />\r\n            <input placeholder=\"Search\" onChange={this.handleSearch} />\r\n            {results.length > 0 && (\r\n              <div className=\"search-results\">\r\n                <ul>\r\n                  {results.map((user) => (\r\n                    <li className=\"search-results-row\">\r\n                      <Link to={`/user/${user._id}`}>\r\n                        <img\r\n                          src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                          alt=\"user-dp\"\r\n                        />\r\n                        <span>{user.name}</span>\r\n                      </Link>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"right-nav\">\r\n            {isLoggedin && (\r\n              <div className=\"user\">\r\n                <Link to=\"/setting\">\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                    alt=\"user-dp\"\r\n                    id=\"user-dp\"\r\n                  />\r\n                </Link>\r\n                <span>{user.name}</span>\r\n              </div>\r\n            )}\r\n            <div className=\"nav-links\">\r\n              <ul>\r\n                {!isLoggedin && (\r\n                  <li>\r\n                    <Link to=\"/login\">Log in</Link>\r\n                  </li>\r\n                )}\r\n                {!isLoggedin && (\r\n                  <li>\r\n                    <Link to=\"/signup\">Register</Link>\r\n                  </li>\r\n                )}\r\n                {isLoggedin && <li onClick={this.logout}>Log out</li>}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n    results: state.search.results,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { PostList, FriendList, Chat } from './';\r\nclass Home extends Component {\r\n  render() {\r\n    const { posts, friends, isLoggedin } = this.props;\r\n    return (\r\n      <div className=\"home\">\r\n        <PostList posts={posts} />\r\n        {isLoggedin && <FriendList friends={friends} />}\r\n        {isLoggedin && <Chat />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction Page404(props) {\r\n  return (\r\n    <div>\r\n      <h1>404:Nothing found here!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login, clearAuthState } from '../actions/auth';\r\nimport logger from 'redux-logger';\r\nimport { func } from 'prop-types';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.emailInputRef = React.createRef();\r\n    // this.passwordInputRef = React.createRef();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log('this.emailInputRef', this.emailInputRef);\r\n    // console.log('this.passwordInputRef', this.passwordInputRef);\r\n    const { email, password } = this.state;\r\n    if (email && password) {\r\n      this.props.dispatch(login(email, password));\r\n    }\r\n    console.log('this.state', this.state);\r\n  };\r\n  render() {\r\n    const { error, inProgress, isLoggedin } = this.props.auth;\r\n    console.log('PROPS yo', this.props.location);\r\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\r\n    if (isLoggedin) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\">Log In</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            onChange={this.handleEmailChange}\r\n            // ref={this.emailInputRef}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            required\r\n            onChange={this.handlePasswordChange}\r\n            // ref={this.passwordInputRef}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          {inProgress ? (\r\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\r\n              Logging In\r\n            </button>\r\n          ) : (\r\n            <button onClick={this.handleFormSubmit}>Log In</button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup, startSignup, clearAuthState } from '../actions/auth';\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: '',\r\n      confirmPassword: '',\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n  handleInputChange = (field, value) => {\r\n    this.setState({\r\n      [field]: value,\r\n    });\r\n  };\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log('this.emailInputRef', this.emailInputRef);\r\n    // console.log('this.passwordInputRef', this.passwordInputRef);\r\n    const { email, password, name, confirmPassword } = this.state;\r\n    if (email && password && name && confirmPassword) {\r\n      this.props.dispatch(startSignup());\r\n      this.props.dispatch(signup(email, password, name, confirmPassword));\r\n    }\r\n    console.log('this.state', this.state);\r\n  };\r\n  render() {\r\n    const { error, inProgress, isLoggedin } = this.props.auth;\r\n    if (isLoggedin) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\">Sign Up</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            required\r\n            onChange={(e) => this.handleInputChange('name', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            required\r\n            onChange={(e) => this.handleInputChange('email', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            required\r\n            onChange={(e) => this.handleInputChange('password', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            required\r\n            onChange={(e) =>\r\n              this.handleInputChange('confirmPassword', e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        {inProgress ? (\r\n          <div className=\"field\">\r\n            <button disabled={inProgress}>Sign Up</button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"field\">\r\n            <button onClick={this.handleFormSubmit}>Sign Up</button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Signup);\r\n","import React, { Component, useReducer } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editUser, clearAuthState } from '../actions/auth';\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: props.auth.user.name,\r\n      password: '',\r\n      confirmPassword: '',\r\n      editMode: false,\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleChange = (fieldName, val) => {\r\n    this.setState({\r\n      [fieldName]: val,\r\n    });\r\n  };\r\n  handleSave = () => {\r\n    const { password, confirmPassword, name } = this.state;\r\n    const { user } = this.props.auth;\r\n    this.props.dispatch(editUser(name, password, confirmPassword, user._id));\r\n  };\r\n  render() {\r\n    const { user, error } = this.props.auth;\r\n    const { editMode } = this.state;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n            id=\"user-dp\"\r\n          />\r\n        </div>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        {error === false && (\r\n          <div className=\"alert success-dailog\">\r\n            Successfully update Profile\r\n          </div>\r\n        )}\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          {editMode ? (\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => this.handleChange('name', e.target.value)}\r\n              value={this.state.name}\r\n            />\r\n          ) : (\r\n            <div className=\"field-value\">{user.name}</div>\r\n          )}\r\n        </div>\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">New password</div>\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) => this.handleChange('password', e.target.value)}\r\n              value={this.state.password}\r\n            />\r\n          </div>\r\n        )}\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">Confirm password</div>\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) =>\r\n                this.handleChange('confirmPassword', e.target.value)\r\n              }\r\n              value={this.state.confirmPassword}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"btn-grp\">\r\n          {editMode ? (\r\n            <button className=\"button save-btn\" onClick={this.handleSave}>\r\n              Save\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button edit-btn\"\r\n              onClick={(e) => {\r\n                this.handleChange('editMode', true);\r\n              }}\r\n            >\r\n              Edit profile\r\n            </button>\r\n          )}\r\n          {editMode && (\r\n            <div\r\n              className=\"go-back\"\r\n              onClick={(e) => {\r\n                this.handleChange('editMode', false);\r\n              }}\r\n            >\r\n              Go Back\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Settings);\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from './actionTypes';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utilis';\r\nexport function startUserProfileFetch() {\r\n  return {\r\n    type: FETCH_USER_PROFILE,\r\n  };\r\n}\r\nexport function userProfileSuccess(user) {\r\n  return {\r\n    type: USER_PROFILE_SUCCESS,\r\n    user,\r\n  };\r\n}\r\nexport function userProfileFailure(error) {\r\n  return {\r\n    type: USER_PROFILE_FAILURE,\r\n    error,\r\n  };\r\n}\r\nexport function fetchUserProfile(userId) {\r\n  return (dispatch) => {\r\n    dispatch(startUserProfileFetch());\r\n    const url = APIUrls.userProfile(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data.data.user);\r\n        dispatch(userProfileSuccess(data.data.user));\r\n        return;\r\n      });\r\n    dispatch(userProfileFailure());\r\n  };\r\n}\r\n","import { FETCH_USER_FRIENDS, ADD_FRIEND, REMOVE_FRIEND } from './actionTypes';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utilis';\r\n\r\nexport function fetchUserFriends(friends) {\r\n  return {\r\n    type: FETCH_USER_FRIENDS,\r\n    friends,\r\n  };\r\n}\r\nexport function friends() {\r\n  return (dispatch) => {\r\n    // dispatch(startUserProfileFetch());\r\n    const url = APIUrls.userFriends();\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('friends', data.data.friends);\r\n        dispatch(fetchUserFriends(data.data.friends));\r\n        return;\r\n      });\r\n    //   dispatch(userProfileFailure())\r\n  };\r\n}\r\nexport function addFriend(friend) {\r\n  return {\r\n    type: ADD_FRIEND,\r\n    friend,\r\n  };\r\n}\r\nexport function removeFriend(userId) {\r\n  return {\r\n    type: REMOVE_FRIEND,\r\n    userId,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUserProfile } from '../actions/profile';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utilis';\r\nimport { addFriend, removeFriend } from '../actions/friend';\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      success: null,\r\n      error: null,\r\n      successMessage: null,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    console.log('user_id', this.props);\r\n    const { match } = this.props.props;\r\n    if (match.params.userId) {\r\n      this.props.dispatch(fetchUserProfile(match.params.userId));\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: { params: prevParams },\r\n    } = prevProps.props;\r\n    const {\r\n      match: { params: currParams },\r\n    } = this.props.props;\r\n    if (prevParams && currParams && prevParams.userId != currParams.userId) {\r\n      this.props.dispatch(fetchUserProfile(currParams.userId));\r\n    }\r\n  }\r\n\r\n  checkIfUserIsAFriend = () => {\r\n    console.log('this.props', this.props);\r\n    const { match } = this.props.props;\r\n    const { friends } = this.props;\r\n    const userId = match.params.userId;\r\n    const index = friends.map((friend) => friend.to_user._id).indexOf(userId);\r\n    if (index !== -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  handleAddFriendClick = async () => {\r\n    const userId = this.props.props.match.params.userId;\r\n    const url = APIUrls.addFriend(userId, this.props.curr_user._id);\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    };\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    if (data.success) {\r\n      this.setState({\r\n        success: true,\r\n        successMessage: 'Added Friend Successfully',\r\n      });\r\n      this.props.dispatch(addFriend(data.data.friendship));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n  handleRemoveFriendClick = async () => {\r\n    const userId = this.props.props.match.params.userId;\r\n    const url = APIUrls.removeFriend(userId);\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    };\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n    if (data.success) {\r\n      this.setState({\r\n        success: true,\r\n        successMessage: 'Remove Friend Successfully',\r\n      });\r\n      this.props.dispatch(removeFriend(userId));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { profile } = this.props;\r\n    const { success, error, successMessage } = this.state;\r\n    const user = profile.user;\r\n    const isUserAFriend = this.checkIfUserIsAFriend();\r\n    if (profile.inProgress) {\r\n      return <h1>Loading...</h1>;\r\n    }\r\n    console.log('props_user', this.props.props.match.params);\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n            id=\"user-dp\"\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          <div className=\"field-value\">{user.name}</div>\r\n        </div>\r\n        <div className=\"btn-grp\">\r\n          {isUserAFriend ? (\r\n            <button\r\n              className=\"button edit-btn\"\r\n              onClick={this.handleRemoveFriendClick}\r\n            >\r\n              Remove Friend\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button edit-btn\"\r\n              onClick={this.handleAddFriendClick}\r\n            >\r\n              Add Friend\r\n            </button>\r\n          )}\r\n          {success && (\r\n            <div className=\"alert sucess-dailog\">{successMessage}</div>\r\n          )}\r\n          {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps({ profile, friends, auth }) {\r\n  return {\r\n    profile,\r\n    friends,\r\n    curr_user: auth.user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(User);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction FriendListItem(props) {\r\n  return (\r\n    <div>\r\n      <Link className=\"friends-item\" to={`user/${props.friend._id}`}>\r\n        <div className=\"friends-img\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-pic\"\r\n          />\r\n        </div>\r\n        <div className=\"friends-name\">{props.friend.name}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendListItem;\r\n","import React, { Component } from 'react';\r\nimport { FriendListItem } from './';\r\nclass FriendList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"friends-list\">\r\n        <div className=\"header\">Friends</div>\r\n        {this.props.friends && this.props.friends.length === 0 && (\r\n          <div className=\"no-friends\">No friends found!</div>\r\n        )}\r\n        {/* //imp check arrow function */}\r\n        {this.props.friends &&\r\n          this.props.friends.map((friend) => (\r\n            <FriendListItem friend={friend.to_user} key={friend._id} />\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createPost } from '../actions/posts';\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: '',\r\n    };\r\n  }\r\n  handleOnClick = () => {\r\n    this.props.dispatch(createPost(this.state.content, this.props.user));\r\n    this.setState({\r\n      content: '',\r\n    });\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"create-post\">\r\n        <textarea\r\n          className=\"add-post\"\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n        />\r\n        <div>\r\n          <button id=\"add-post-btn\" onClick={this.handleOnClick}>\r\n            Add Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreatePost);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Comment } from './';\r\nimport { createComment, addLikeToStore } from '../actions/posts';\r\nimport { connect } from 'react-redux';\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comment: '',\r\n    };\r\n  }\r\n  handleKeyPress = (e) => {\r\n    const { comment } = this.state;\r\n    const { post } = this.props;\r\n    if (e.key === 'Enter') {\r\n      this.props.dispatch(createComment(comment, post._id, this.props.user));\r\n      //clear comment\r\n      this.setState({\r\n        comment: '',\r\n      });\r\n    }\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      comment: e.target.value,\r\n    });\r\n  };\r\n  handlePostLike = () => {\r\n    const { post, user } = this.props;\r\n    this.props.dispatch(addLikeToStore(post._id, 'Post', user._id));\r\n  };\r\n  render() {\r\n    const { post, user } = this.props;\r\n    const { comment } = this.state;\r\n    const isPostLikeByUser = post.likes.includes(user._id);\r\n    return (\r\n      <div className=\"post-wrapper\" key={post._id}>\r\n        <div className=\"post-header\">\r\n          <div className=\"post-avatar\">\r\n            <Link to={`/user/${post.user._id}`}>\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                alt=\"user-pic\"\r\n              />\r\n            </Link>\r\n            <div>\r\n              <span className=\"post-author\">{post.user.name}</span>\r\n              <span className=\"post-time\">a minute ago</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">{post.content}</div>\r\n\r\n          <div className=\"post-actions\">\r\n            <button className=\"post-like no-btn\" onClick={this.handlePostLike}>\r\n              {isPostLikeByUser ? (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1076/1076984.svg\"\r\n                  alt=\"likes-icon\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n                  alt=\"likes-icon\"\r\n                />\r\n              )}\r\n              <span>{post.likes.length}</span>\r\n            </button>\r\n\r\n            <div className=\"post-comments-icon\">\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\r\n                alt=\"comments-icon\"\r\n              />\r\n              <span>{post.comments.length}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-comment-box\">\r\n            <input\r\n              placeholder=\"Start typing a comment\"\r\n              value={this.state.comment}\r\n              onChange={this.handleChange}\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n          </div>\r\n          <div className=\"post-comments-list\">\r\n            {post.comments.map((comment) => (\r\n              <Comment comment={comment} key={comment._id} postId={post._id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Post);\r\n","import React from 'react';\r\n\r\nconst Comment = (props) => {\r\n  const { comment } = props;\r\n  return (\r\n    <div className=\"post-comments-item\">\r\n      <div className=\"post-comment-header\">\r\n        <span className=\"post-comment-author\">{comment.user.name}</span>\r\n        <span className=\"post-comment-time\">a minute ago</span>\r\n        <span className=\"post-comment-likes\">{comment.likes.length}</span>\r\n      </div>\r\n\r\n      <div className=\"post-comment-content\">{comment.content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport '../chat.css';\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: [], // {content: 'some message', self: true}\r\n      typedMessage: '',\r\n    };\r\n    this.socket = io.connect('http://54.237.158.65:5000');\r\n    this.userEmail = props.user.email;\r\n    if (this.userEmail) {\r\n      this.setupConnections();\r\n    }\r\n  }\r\n  setupConnections = () => {\r\n    const socketConnection = this.socket;\r\n    const self = this;\r\n    this.socket.on('connect', function () {\r\n      console.log('CONNECTION_ESTABLISHED');\r\n      socketConnection.emit('join_room', {\r\n        user_email: this.userEmail,\r\n        chatroom: 'codeial',\r\n      });\r\n      socketConnection.on('user_joined', function (data) {\r\n        console.log('NEW USER JOINED', data);\r\n      });\r\n    });\r\n    this.socket.on('receive_message', function (data) {\r\n      //add message to state\r\n      const { messages } = self.state;\r\n      const messageObject = {};\r\n      messageObject.content = data.message;\r\n      if (data.user_email === self.userEmail) {\r\n        messageObject.self = true;\r\n      }\r\n      self.setState({\r\n        messages: [...messages, messageObject],\r\n        typedMessage: '',\r\n      });\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    const { typedMessage } = this.state;\r\n    if (typedMessage && this.userEmail) {\r\n      this.socket.emit('send_message', {\r\n        messages: typedMessage,\r\n        user_email: this.userEmail,\r\n        chatroom: 'codeial',\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { typedMessage, messages } = this.state;\r\n\r\n    return (\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n          Chat\r\n          <img\r\n            src=\"https://www.iconsdb.com/icons/preview/white/minus-5-xxl.png\"\r\n            alt=\"hide-bar\"\r\n            height={17}\r\n          />\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message) => (\r\n            <div\r\n              className={\r\n                message.self\r\n                  ? 'chat-bubble self-chat'\r\n                  : 'chat-bubble other-chat'\r\n              }\r\n            >\r\n              {message.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-footer\">\r\n          <input\r\n            type=\"text\"\r\n            value={typedMessage}\r\n            onChange={(e) => this.setState({ typedMessage: e.target.value })}\r\n          />\r\n          <button onClick={this.handleSubmit}>Submit</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Chat);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/posts';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { Navbar, Home, Page404, Login, Signup, Settings, User } from './';\nimport * as jwtDecode from 'jwt-decode';\nimport { authenticateUser } from '../actions/auth';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utilis';\nimport { friends } from '../actions/friend';\nconst PrivateRoute = (privateRouteProps) => {\n  const { isLoggedin, path, component: Component } = privateRouteProps;\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        return isLoggedin ? (\n          <Component props={props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchPosts());\n\n    const token = getAuthTokenFromLocalStorage();\n    if (token) {\n      const user = jwtDecode(token);\n      this.props.dispatch(\n        authenticateUser({ email: user.email, _id: user._id, name: user.name })\n      );\n      this.props.dispatch(friends());\n    }\n  }\n  render() {\n    console.log('PROPS', this.props);\n    const { posts, auth, friends } = this.props;\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={(props) => {\n                return (\n                  <Home\n                    {...props}\n                    posts={posts}\n                    friends={friends}\n                    isLoggedin={auth.isLoggedin}\n                  />\n                );\n              }}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <PrivateRoute\n              path=\"/setting\"\n              component={Settings}\n              isLoggedin={auth.isLoggedin}\n            />\n            <PrivateRoute\n              path=\"/user/:userId\"\n              component={User}\n              isLoggedin={auth.isLoggedin}\n            />\n            <Route component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n    friends: state.friends,\n  };\n}\nexport default connect(mapStateToProps)(App);\n","import { func } from 'prop-types';\r\nimport { act } from 'react-dom/test-utils';\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGIN_START,\r\n  SIGNUP_START,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_SUCCESSFUL,\r\n  EDIT_USER_FAILED,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialAuthState = {\r\n  user: {},\r\n  error: null,\r\n  isLoggedin: false,\r\n  inProgress: false,\r\n};\r\n\r\nexport default function auth(state = initialAuthState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_START:\r\n    case SIGNUP_START:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n        inProgress: false,\r\n        error: null,\r\n      };\r\n    case LOGIN_FAILED:\r\n    case SIGNUP_FAILED:\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    case AUTHENTICATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n      };\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        isLoggedin: false,\r\n      };\r\n    case CLEAR_AUTH_STATE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case EDIT_USER_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        error: false,\r\n      };\r\n    case EDIT_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from '../actions/actionTypes';\r\nconst initalProfileState = {\r\n  user: {},\r\n  inProgress: false,\r\n  success: null,\r\n  error: null,\r\n};\r\nexport default function profile(state = initalProfileState, action) {\r\n  //{post:[]}\r\n  switch (action.type) {\r\n    case USER_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        success: true,\r\n        inProgress: false,\r\n      };\r\n    case USER_PROFILE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    case FETCH_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_USER_FRIENDS,\r\n  ADD_FRIEND,\r\n  REMOVE_FRIEND,\r\n} from '../actions/actionTypes';\r\nconst initialFriendState = [];\r\nexport default function friends(state = initialFriendState, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER_FRIENDS:\r\n      return [...action.friends];\r\n    case ADD_FRIEND:\r\n      return state.concat(action.friend);\r\n    case REMOVE_FRIEND:\r\n      const newArr = state.filter(\r\n        (friend) => friend.to_user._id !== action.userId\r\n      );\r\n      return newArr;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from '../actions/actionTypes';\r\n\r\nconst initialSearchState = {\r\n  results: [],\r\n};\r\nexport default function search(state = initialSearchState, action) {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_RESULTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        results: action.users,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport posts from './posts';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport friends from './friend';\r\nimport search from './search';\r\nexport default combineReducers({\r\n  posts,\r\n  auth,\r\n  profile,\r\n  friends,\r\n  search,\r\n});\r\n","import {\n  UPDATE_POSTS,\n  ADD_POST,\n  ADD_COMMENT,\n  UPDATE_POST_LIKE,\n} from '../actions/actionTypes';\n\nexport default function posts(state = [], action) {\n  switch (action.type) {\n    case UPDATE_POSTS:\n      return action.posts;\n    case ADD_POST:\n      return [action.post, ...state];\n    case ADD_COMMENT:\n      const newPost = state.map((post) => {\n        if (post._id === action.postId) {\n          return {\n            ...post,\n            comments: [action.comment, ...post.comments],\n          };\n        }\n        return post;\n      });\n      return newPost;\n    case UPDATE_POST_LIKE:\n      const updatedPost = state.map((post) => {\n        if (post._id === action.postId) {\n          return {\n            ...post,\n            likes: [...post.likes, action.userId],\n          };\n        }\n        return post;\n      });\n      return updatedPost;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store';\nconst store = configureStore();\nconsole.log('state', store.getState());\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducers';\r\nlet store;\r\nexport function configureStore() {\r\n  store = createStore(reducer, applyMiddleware(thunk, logger));\r\n  return store;\r\n}\r\n"],"sourceRoot":""}